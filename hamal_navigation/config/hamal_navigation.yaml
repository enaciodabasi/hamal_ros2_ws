---
amcl:
  ros__parameters:
    use_sim_time: false

    global_frame_id: map
    odom_frame_id: odom
    base_frame_id: base_link
    scan_topic: scan

    robot_model_type: nav2_amcl::DifferentialMotionModel

    set_initial_pose: true
    always_reset_initial_pose: false

    tf_broadcast: true
    transform_tolerance: 1.0

    #alpha1: 0.2
    #alpha2: 0.2
    #alpha3: 0.2
    #alpha4: 0.2
    #alpha5: 0.2

    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.8
    alpha4: 0.2
    alpha5: 0.5


    # Beam skipping - ignores beams for which a majoirty of particles do not agree with the map
    # prevents correct particles from getting down weighted because of unexpected obstacles
    # such as humans
    do_beamskip: false
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3

    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 12.0
    laser_min_range: 0.2
    laser_model_type: likelihood_field
    max_beams: 1617
    max_particles: 5000
    min_particles: 2000

    pf_err: 0.05
    pf_z: 0.99

    recovery_alpha_fast: 0.01
    recovery_alpha_slow: 0.001

    resample_interval: 1
    save_pose_rate: 0.5
    sigma_hit: 0.2

    update_min_a: 0.05
    update_min_d: 0.125

    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05

    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0

amcl_map_client:
  ros__parameters:
    use_sim_time: false

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: false

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /hamal_base_controller/odom

    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: false

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    #odom_topic: /hamal_base_controller/odom
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: progress_checker
    goal_checker_plugins: [general_goal_checker]   # "precise_goal_checker"
    controller_plugins: [FollowPath]

    # Progress checker parameters
    progress_checker:
      plugin: nav2_controller::SimpleProgressChecker
      required_movement_radius: 0.1
      movement_time_allowance: 10.0
    # Goal checker parameters
    #precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: false
      plugin: nav2_controller::SimpleGoalChecker
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.05
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      angular_dist_threshold: 0.785
      forward_sampling_distance: 0.5
      rotate_to_heading_angular_vel: 1.8
      max_angular_accel: 3.2
      simulate_ahead_time: 1.0
      ### Pure Pursuit Params
      rotate_to_goal_heading: false
      desired_linear_vel: 0.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.8
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: true
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 3.2
      max_robot_pose_search_dist: 10.0
    # DWB parameters
    # FollowPath:
    #   #plugin: "nav2_rotation_shim_controller::RotationShimController"
    #   #angular_dist_threshold: 0.5
    #   #forward_sampling_distance: 0.5
    #   #rotate_to_heading_angular_vel: 1.8
    #   #max_angular_accel: 3.2
    #   #simulate_ahead_time: 1.0
    #   #rotate_to_goal_heading: false
    #   #primary_controller: dwb_core::DWBLocalPlanner
    #   plugin: dwb_core::DWBLocalPlanner
    #   #trajectory_generator_name: dwb_plugins::LimitedAccelGenerator
    #   use_realtime_priority: true
    #   debug_trajectory_details: True
    #   #trajectory_generator_name: dwb_plugins::LimitedAccelGenerator  #dwb_plugins::StandardTrajectoryGenerator #
    #   min_vel_x: -0.5
    #   min_vel_y: 0.0
    #   max_vel_x: 0.5
    #   max_vel_y: 0.0
    #   max_vel_theta: 0.75
    #   min_vel_theta: 0.0
    #   min_speed_xy: -0.5
    #   max_speed_xy: 0.5
    #   min_speed_theta: 0.00
    #   acc_lim_x: 0.25
    #   acc_lim_y: 0.0
    #   acc_lim_theta: 0.325
    #   decel_lim_x: -0.25
    #   decel_lim_y: 0.0
    #   decel_lim_theta: 0.0
    #   vx_samples: 30
    #   vy_samples: 0
    #   vtheta_samples: 25
    #   sim_time: 2.0
    #   sim_period: 0.1
    #   linear_granularity: 0.1
    #   angular_granularity: 0.05
    #   transform_tolerance: 0.25
    #   xy_goal_tolerance: 0.1
    #   trans_stopped_velocity: 0.25
    #   short_circuit_trajectory_evaluation: True
    #   stateful: False
    #   critics: [ "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
    #   BaseObstacle.scale: 1.0
    #   PathAlign.scale: 32.0
    #   PathAlign.forward_point_distance: 0.1
    #   GoalAlign.scale: 24.0
    #   GoalAlign.forward_point_distance: 0.1
    #   PathDist.scale: 32.0
    #   GoalDist.scale: 24.0
    #   RotateToGoal.slowing_factor: 5.0
    #   RotateToGoal.lookahead_time: -0.4
      #debug_trajectory_details: true
      #min_vel_x: -0.50
      #min_vel_y: 0.0
      #max_vel_x: 0.5
      #max_vel_y: 0.0
      #max_vel_theta: 0.5
      #min_speed_xy: 0.0
      #max_speed_xy: 0.5
      #min_speed_theta: -0.5
      #acc_lim_x: 0.5
      #acc_lim_y: 0.0
      #acc_lim_theta: 0.375
      #decel_lim_x: -0.5
      #decel_lim_y: 0.0
      #decel_lim_theta: -0.375
      #vx_samples: 30
      #vy_samples: 0
      #vtheta_samples: 35
      #sim_time: 2.0
      #linear_granularity: 0.1
      #angular_granularity: 0.1
      #transform_tolerance: 0.25
      #xy_goal_tolerance: 0.05
      #trans_stopped_velocity: 0.01
      #short_circuit_trajectory_evaluation: true
      #stateful: true
      #critics: [RotateToGoal, Oscillation, BaseObstacle, GoalAlign, PathAlign, PathDist, GoalDist]
      #BaseObstacle.scale: 0.02
      #PathAlign.scale: 32.0
      #PathAlign.forward_point_distance: 0.1
      #GoalAlign.scale: 24.0
      #GoalAlign.forward_point_distance: 0.1
      #PathDist.scale: 32.0
      #GoalDist.scale: 12.0
      #RotateToGoal.scale: 32.0
      #RotateToGoal.slowing_factor: 1.3
      #RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      footprint: "[[-1.0, -0.55],[-1.0, 0.55],[1.0, 0.55],[1.0, -0.55]]"
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      #robot_radius: 0.22
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.70
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      footprint: "[[-1.0, -0.55],[-1.0, 0.55],[1.0, 0.55],[1.0, -0.55]]"
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      #robot_radius: 0.22
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.7
      always_send_full_costmap: True

#local_costmap:
#  local_costmap:
#    ros__parameters:
#      footprint: "[[-1.0, -0.55],[-1.0, 0.55],[1.0, 0.55],[1.0, -0.55]]"
#      update_frequency: 3.0
#      publish_frequency: 2.0
#      global_frame: odom
#      robot_base_frame: base_link
#      use_sim_time: false
#      rolling_window: true
#      width: 5
#      height: 5
#      resolution: 0.05
#      robot_radius: 0.20
#      plugins: [obstacle_layer, inflation_layer]
#      static_layer:
#        plugin: nav2_costmap_2d::StaticLayer
#        enabled: true
#        map_subscribe_transient_local: true
#      obstacle_layer:
#        plugin: nav2_costmap_2d::ObstacleLayer
#        enabled: true
#        observation_sources: scan
#        scan:
#          topic: /scan
#          max_obstacle_height: 2.0
#          clearing: true
#          marking: true
#          data_type: "LaserScan"
#          raytrace_max_range: 3.0
#          raytrace_min_range: 0.0
#          obstacle_max_range: 2.5
#          obstacle_min_range: 0.1
#          base_frame_id: base_link
#      inflation_layer:
#        plugin: nav2_costmap_2d::InflationLayer
#        cost_scaling_factor: 3.0
#        inflation_radius: 0.55 
#      always_send_full_costmap: true
#global_costmap:
#  global_costmap:
#    ros__parameters:
#      footprint: "[[-1.0, -0.55],[-1.0, 0.55],[1.0, 0.55],[1.0, -0.55]]"
#      update_frequency: 1.0
#      publish_frequency: 1.0
#      global_frame: map
#      robot_base_frame: base_link
#      use_sim_time: false
#      robot_radius: 0.20
#      resolution: 0.05
#      track_unknown_space: true
#      plugins: [static_layer, obstacle_layer, inflation_layer]
#      static_layer:
#        plugin: nav2_costmap_2d::StaticLayer
#        map_subscribe_transient_local: true
#      obstacle_layer:
#        plugin: nav2_costmap_2d::ObstacleLayer
#        enabled: true
#        observation_sources: scan
#        scan:
#          topic: /scan
#          max_obstacle_height: 2.0
#          clearing: true
#          marking: true
#          data_type: "LaserScan"
#          raytrace_max_range: 3.0
#          raytrace_min_range: 0.0
#          obstacle_max_range: 2.5
#          obstacle_min_range: 0.1
#          base_frame_id: base_link
#      inflation_layer:
#        plugin: nav2_costmap_2d::InflationLayer
#        cost_scaling_factor: 3.0
#        inflation_radius: 0.55
#      always_send_full_costmap: true
#

collision_monitor:
  ros__parameters:
    use_sim_time: false
    base_frame_id: base_link
    base_shift_correction: true
    cmd_vel_in_topic: cmd_vel_raw
    cmd_vel_out_topic: /collision_cmd_vel
    observation_sources: [scan]
    scan:
      topic: /scan
      max_obstacle_height: 2.0
      clearing: true
      marking: true
      data_type: "LaserScan"
      raytrace_max_range: 3.0
      raytrace_min_range: 0.0
      obstacle_max_range: 2.5
      obstacle_min_range: 0.0
    odom_frame_id: odom
    source_timeout: 2.0
    stop_pub_timeout: 1.0
    transform_tolerance: 0.1
    use_sim_time: false


map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: /home/hamal22/hamal_ros2_ws/src/hamal_mapping/yeni_harita/yeni_harita.yaml

map_saver:
  ros__parameters:
    use_sim_time: false
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: true

planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 1.0
    planner_plugins: ["GridBased"]
      
    planner_plugins: [GridBased]
    GridBased:
      plugin: nav2_smac_planner/SmacPlanner2D
      tolerance: 0.125 # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false # whether or not to downsample the map
      downsampling_factor: 1 # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true # allow traveling in unknown space
      max_iterations: 500000 # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 500 # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 3.0 # max time in s for planner to plan, smooth
      cost_travel_multiplier: 2.5 # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        max_iterations: 500
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-6

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: false

behavior_server:
  ros__parameters:
    use_sim_time: false

    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.25

    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 5.0

    behavior_plugins: [spin, backup, drive_on_heading, assisted_teleop, wait]
    spin:
      plugin: nav2_behaviors/Spin
    backup:
      plugin: nav2_behaviors/BackUp
    drive_on_heading:
      plugin: nav2_behaviors/DriveOnHeading
    wait:
      plugin: nav2_behaviors/Wait
    assisted_teleop:
      plugin: nav2_behaviors/AssistedTeleop

    # spin & backup
    simulate_ahead_time: 0.5

    # spin
    max_rotational_vel: 0.6
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 5
    stop_on_failure: false
    waypoint_task_executor_plugin: wait_at_waypoint
    wait_at_waypoint:
      plugin: nav2_waypoint_follower::WaitAtWaypoint
      enabled: true
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: false

    smoothing_frequency: 5.0
    scale_velocities: false
    feedback: OPEN_LOOP
    max_velocity: [0.5, 0.0, 1.5]   # Measured: MAX[1.0, 0.0, 3.14] (decreased for safety)
    min_velocity: [-0.5, 0.0, -1.5] # Measured: MAX[1.0, 0.0, 3.14] (decreased for safety)
    max_accel: [1.0, 0.0, 3.2]
    max_decel: [-1.0, 0.0, -3.2]  # Measured
    # odom_topic: "odometry/filtered" # Used in the CLOSED_LOOP feedback mode
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0